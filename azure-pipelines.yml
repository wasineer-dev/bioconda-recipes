# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

stages:
- stage: 'lint'
  jobs:
  - job: 'lint'  
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      maxParallel: 8

    steps:
    - bash: echo "##vso[task.prependpath]$CONDA/bin"
      displayName: Add conda to PATH

    - bash: |
        wget https://raw.githubusercontent.com/bioconda/bioconda-common/master/common.sh
      displayName: Fetch common.sh

    - task: Cache@2
      inputs:
        path: "/usr/share/miniconda/envs/bioconda"
        key: '"$(Agent.OS)" | **/common.sh'
        cacheHitVar: CACHE_RESTORED
      displayName: Restore cache

    - script: .azure-pipelines/createEnv.py
      condition: ne(variables.CACHE_RESTORED, 'true')
      displayName: Install bioconda-utils

    - bash: |
          source activate bioconda
          set -e
          source=`echo $(Build.SourceBranch) | sed -e "s#^refs/pull/#pull/#"`
          bioconda-utils lint --loglevel debug --full-report --git-range origin/"$SYSTEM_PULLREQUEST_TARGETBRANCH" "$source"
      displayName: Lint

